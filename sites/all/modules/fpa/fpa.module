<?php

function fpa_menu() {
  $items = array();
  
  $items['fpa_modal/%fpa_js/permissions'] = array(
      'title' => 'Permissions',
      'page callback' => '_fpa_ctools',
      'page arguments' => array(1),
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
  );
  
  return $items;
}

function fpa_js_load($arg) {
  if (module_exists('ctools')) {
    return ctools_js_load($arg);
  }
  return 0;
}

function fpa_form_alter(&$form, &$form_state, $form_id) {
  
  switch ($form_id) {
    case 'content_field_edit_form':
      if ((module_exists('content_permissions') || module_exists('field_permissions'))) {
        $perm = $form['#field']['field_name'];
        $pos = &$form['field'];
      }
      break;
    case 'node_type_form':
      $perm = $form['#node_type']->type .' content';
      $pos = &$form;
      break;
  }
  
  if (isset($perm) && user_access('administer permissions')) {
    
    $fpa_path = drupal_get_path('module', 'fpa');
    
    $pos['fpa_fieldset'] = array(
      '#type' => 'fieldset',
      '#title' => t('Permissions'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#description' => t('Clicking on this link will launch a modal/tab/window displaying the appropriate permissions.'),
    );
    
    $pos['fpa_fieldset']['fpa'] = array(
      '#type' => 'markup',
    );
    
    // available modal modules in order of priority
    $supported_modules = array(
      //'dialog', // dialog api is buggy
      'ctools',
      'modalframe',
    );
    
    // gets the most prefered modal method from the available methods
    $method = array_shift(array_intersect($supported_modules, array_keys(module_list())));
    
    $path = 'fpa_modal/nojs/permissions';
    $attributes = array();
    $query = array('fpa_perm' => $perm, 'fpa_method' => $method);
    
    switch ($method) {
      case 'dialog':
        dialog_add_js();
        $attributes['class'] = 'ctools-use-dialog';
        break;
      case 'ctools':
        ctools_include('ajax');
        ctools_include('modal');
        ctools_modal_add_js();
        $attributes['class'] = 'ctools-use-modal';
        break;
      case 'modalframe':
        modalframe_parent_js();
        drupal_add_js($fpa_path .'/js/fpa.js', 'module');
        $attributes['class'] = 'fpa_modalframe';
        break;
      default:
        $path = 'admin/user/permissions';
        $attributes['target'] = '_blank';
        $query['fpa_method'] = '_blank';
        break;
    }
    
    $pos['fpa_fieldset']['fpa']['#value'] = l(t('Manage Permissions'), $path, array('query' => $query, 'attributes' => $attributes));
  }
}

function fpa_form_user_admin_perm_alter(&$form, &$form_state) {
  if ($_GET['fpa_method'] == 'modalframe') {
    modalframe_child_js();
    $form['#submit'][] = '_fpa_modalframe_submit';
  }
  $fpa_path = drupal_get_path('module', 'fpa');
  drupal_add_js($fpa_path .'/js/fpa.js', 'module');
  drupal_add_js(array('fpa_perm' => $_GET['fpa_perm'] ? $_GET['fpa_perm'] : ''), 'setting');
}

function _fpa_modalframe_submit() {
  modalframe_close_dialog();
}

function _fpa_ctools($js = NULL) {
  // Need to include the file that contains the permissions form.
  module_load_include('inc', 'user', 'user.admin');
  
  // Fall back if $js is not set.
  if (!$js) {
    return drupal_get_form('user_admin_perm');
  }

  ctools_include('modal');
  ctools_include('ajax');
  $form_state = array(
    'title' => t('Permissions'),
    'ajax' => TRUE,
  );
  
  if ($_GET['fpa_method'] == 'dialog') {
    $output = dialog_get_form('user_admin_perm', $form_state);
  }
  elseif ($_GET['fpa_method'] == 'ctools') {
    $output = ctools_modal_form_wrapper('user_admin_perm', $form_state);
  }
  
  if (empty($output)) {
    $output = array(ctools_ajax_command_reload());
  }
  
  ctools_ajax_render($output);
}
